import path from "path";
import fs from "fs-extra";
import childProcess from "child_process";
import {Config, defaultConfig} from "../";

export function spawn(command: string, params: string[]) {
    const isWindows = process.platform === "win32";
    const result = childProcess.spawnSync(isWindows ? command + ".cmd" : command, params, {
        stdio: "inherit",
    });
    if (result.error) {
        console.error(result.error);
        process.exit(1);
    }
    if (result.status !== 0) {
        console.error(`non-zero exit code returned, code=${result.status}, command=${command} ${params.join(" ")}`);
        process.exit(1);
    }
}

// 生成本地词条
export function generateLocale(config: Config, languages: string[], result: object) {
    const outDir = config.outDir || defaultConfig.outDir;
    const filename = config.filename || defaultConfig.filename;
    fs.ensureDirSync(path.join(process.cwd(), outDir));
    fs.ensureFileSync(path.join(process.cwd(), `${outDir}/${filename}.js`));
    let indexTemplate = `/*
    Attention: This file is generated by "dot-i18n", do not modify
*/\n\n`;

    languages.forEach((_) => {
        indexTemplate += `\nconst ${_} = ${JSON.stringify(result?.[_] || {})};\n`;
    });
    indexTemplate += `\nmodule.exports = {${languages.join(", ")}};\n`;

    fs.writeFileSync(path.join(process.cwd(), `${outDir}/${filename}.js`), indexTemplate);

    const prettierConfig = config.prettierConfig;
    if (prettierConfig) {
        spawn("prettier", ["--config", path.join(process.cwd(), prettierConfig), "--write", path.join(process.cwd(), outDir + "/*")]);
    }
}
