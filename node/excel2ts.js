require("./preOperation");
const path = require("path");
const fs = require("fs-extra");
const XLSX = require("xlsx");
const i18nStore = require("./i18n-store");
const {spawn} = require("./kit");

let result = {};

function generateLocale() {
    const config = i18nStore.getConfig();
    const languages = config.languages;
    fs.ensureDirSync(path.join(process.cwd(), config.localePath));
    fs.ensureFileSync(path.join(process.cwd(), `${config.localePath}/index.ts`));
    let indexTemplate = `/*
    Attention: This file is generated by "dot-icon", do not modify
    ref: https://github.com/vocoWone/dot-i18n
*/\n\n`;
    languages.forEach((_) => {
        fs.ensureFileSync(path.join(process.cwd(), `${config.localePath}/${_}.ts`));
        fs.writeFileSync(path.join(process.cwd(), `${config.localePath}/${_}.ts`), `export default ${JSON.stringify(result[_])}`);
        indexTemplate += `import ${_} from "./${_}";\n`;
    });
    indexTemplate += `\nexport default {${languages.join(", ")}};\n`;
    fs.writeFileSync(path.join(process.cwd(), `${config.localePath}/index.ts`), indexTemplate);
}

function execute() {
    const config = i18nStore.getConfig();
    const allLocales = i18nStore.getLocales();
    const prettierConfig = config.prettierConfig;
    const localePath = config.localePath;
    if (allLocales) {
        result = allLocales;
    }
    const excelExportFilePath = process.cwd() + config.importExcelPath;
    const workbook = XLSX.readFile(excelExportFilePath, {type: "binary"});
    const data = XLSX.utils.sheet_to_json(workbook.Sheets["Sheet1"]);
    data.forEach((_) => {
        config.languages.forEach((__) => {
            if (_[__] && _.namespace && _.code) {
                if (!allLocales[__]) {
                    allLocales[__] = {};
                }
                if (!allLocales[__][_.namespace]) {
                    allLocales[__][_.namespace] = {};
                }
                allLocales[__][_.namespace][_.code] = _[__];
            }
        });
    });

    generateLocale();
    if (prettierConfig) {
        spawn("prettier", ["--config", path.join(process.cwd(), prettierConfig), "--write", path.join(process.cwd(), localePath)]);
    }
    console.info("Build successfully");
}

execute();
